name: learn-github-actions
on:
  push:
    branches:
      - main
  pull_request:
    types: [labeled]
jobs:
  first:
    if: ${{ github.event.label.name == 'bug' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: echo "ISOK=true" >> $GITHUB_ENV
      - name: Set base env variables
        run: |
          cat <<EOT >> environment
          BUILD_BUILDID=${{ github.run_id }}
          BUILD_SOURCEBRANCH=${{ github.ref }}
          EOT
      ###########################################
      # SYSTEM_PULLREQUEST_TARGETBRANCH = target branch name
      # SYSTEM_PULLREQUEST_SOURCEBRANCH = source branch name
      # SYSTEM_PULLREQUEST_PULLREQUESTID = ID of the PR
      # SYSTEM_PULLREQUEST_SOURCECOMMITID = commit SHA of PR
      # DEPLOYBASEPATH = path for deploy URL -> pull/<pr_number> for PRs
      # DEPLOYURL= address for tests deployment, uses DEPLOYHOST and DEPLOYBASEPATH
      # BUILD_SOURCEBRANCHNAME = 'merge' for PRs
      ###########################################
      - name: Set env variables if there is a PR
        run: |
          cat <<EOT >> environment
          SYSTEM_PULLREQUEST_TARGETBRANCH=${{ github.event.pull_request.base.ref }}
          SYSTEM_PULLREQUEST_SOURCEBRANCH=${{ github.event.pull_request.head.ref }}
          SYSTEM_PULLREQUEST_PULLREQUESTID=${{ github.event.pull_request.id }}
          SYSTEM_PULLREQUEST_SOURCECOMMITID=${{ github.event.pull_request.head.sha }}
          DEPLOYBASEPATH=pull/${{github.event.pull_request.number}}
          DEPLOYURL=https://${{env.DEPLOYHOST}}/pull/${{github.event.pull_request.number}}
          EOT
        if: ${{startsWith(github.ref, 'refs/pull/')}}

      - name: Set env variables if there is not a PR
        run: |
          cat <<EOT >> environment
          DEPLOYBASEPATH=heads/${{github.ref_name}}
          DEPLOYURL=https://${{env.DEPLOYHOST}}/heads/${{github.ref_name}}
          BUILD_SOURCEBRANCHNAME=${{ github.ref_name }}
          EOT
        if: ${{!startsWith(github.ref, 'refs/pull/')}}

      - name: Define env variables
        run: |
          input_file="environment"
          while read line
          do
          echo "$line" >> $GITHUB_ENV
          done < "$input_file"

      - run: printenv | sort

